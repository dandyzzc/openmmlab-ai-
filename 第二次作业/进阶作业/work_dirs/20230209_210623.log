2023-02-09 21:06:23,982 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.3, V11.3.109
GCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
PyTorch: 1.10.0+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.1+cu113
OpenCV: 4.6.0
MMCV: 1.6.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMDetection: 2.28.1+c14dd6c
------------------------------------------------------------

2023-02-09 21:06:24,411 - mmdet - INFO - Distributed training: False
2023-02-09 21:06:24,811 - mmdet - INFO - Config:
model = dict(
    type='MaskRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=2,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CocoDataset'
data_root = 'data/chicken/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=12,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/chicken/train/_annotations.coco.json',
        img_prefix='data/chicken/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
        ],
        classes=('none', 'Chicken')),
    val=dict(
        type='CocoDataset',
        ann_file='data/chicken/valid/_annotations.coco.json',
        img_prefix='data/chicken/valid/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('none', 'Chicken')),
    test=dict(
        type='CocoDataset',
        ann_file='data/chicken/test/_annotations.coco.json',
        img_prefix='data/chicken/test/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('none', 'Chicken')))
evaluation = dict(metric=['bbox', 'segm'])
optimizer = dict(type='SGD', lr=0.06, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=200,
    warmup_ratio=0.001,
    step=[4, 7])
runner = dict(type='EpochBasedRunner', max_epochs=10)
checkpoint_config = dict(interval=10)
log_config = dict(interval=1, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v2.0/mask_rcnn/mask_rcnn_r50_fpn_1x_coco/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=16)
classes = ('none', 'Chicken')
work_dir = './work_dirs/chicken'
auto_resume = False
gpu_ids = [0]

2023-02-09 21:06:24,812 - mmdet - INFO - Set random seed to 2056142843, deterministic: False
2023-02-09 21:06:25,235 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-02-09 21:06:25,354 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-02-09 21:06:25,378 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-02-09 21:06:25,382 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([3, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([8, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([8]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.mask_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.upsample.weight - torch.Size([256, 256, 2, 2]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.upsample.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.weight - torch.Size([2, 256, 1, 1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.bias - torch.Size([2]): 
Initialized by user-defined `init_weights` in FCNMaskHead  
2023-02-09 21:06:31,561 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-02-09 21:06:31,569 - mmdet - INFO - load checkpoint from http path: https://download.openmmlab.com/mmdetection/v2.0/mask_rcnn/mask_rcnn_r50_fpn_1x_coco/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth
2023-02-09 21:06:31,759 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([3, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([3]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([8, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([8]).
size mismatch for roi_head.mask_head.conv_logits.weight: copying a param with shape torch.Size([80, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2, 256, 1, 1]).
size mismatch for roi_head.mask_head.conv_logits.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([2]).
2023-02-09 21:06:31,772 - mmdet - INFO - Start running, host: root@autodl-container-c03b118952-04070990, work_dir: /root/mmdetection/work_dirs/chicken
2023-02-09 21:06:31,772 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-09 21:06:31,772 - mmdet - INFO - workflow: [('train', 1)], max: 10 epochs
2023-02-09 21:06:31,773 - mmdet - INFO - Checkpoints will be saved to /root/mmdetection/work_dirs/chicken by HardDiskBackend.
2023-02-09 21:06:35,792 - mmdet - INFO - Epoch [1][1/22]	lr: 6.000e-05, eta: 0:13:57, time: 3.824, data_time: 3.124, memory: 11117, loss_rpn_cls: 0.0197, loss_rpn_bbox: 0.0185, loss_cls: 1.1803, acc: 6.7057, loss_bbox: 0.3226, loss_mask: 7.2418, loss: 8.7829
2023-02-09 21:06:36,705 - mmdet - INFO - Epoch [1][2/22]	lr: 3.597e-04, eta: 0:08:47, time: 1.012, data_time: 0.300, memory: 11417, loss_rpn_cls: 0.0265, loss_rpn_bbox: 0.0146, loss_cls: 1.1714, acc: 7.7311, loss_bbox: 0.3193, loss_mask: 6.9438, loss: 8.4756
2023-02-09 21:06:37,594 - mmdet - INFO - Epoch [1][3/22]	lr: 6.594e-04, eta: 0:06:54, time: 0.889, data_time: 0.205, memory: 11417, loss_rpn_cls: 0.0248, loss_rpn_bbox: 0.0161, loss_cls: 1.1058, acc: 22.2656, loss_bbox: 0.2043, loss_mask: 3.6071, loss: 4.9581
2023-02-09 21:06:38,540 - mmdet - INFO - Epoch [1][4/22]	lr: 9.591e-04, eta: 0:06:00, time: 0.946, data_time: 0.253, memory: 11417, loss_rpn_cls: 0.0212, loss_rpn_bbox: 0.0135, loss_cls: 0.9504, acc: 75.6836, loss_bbox: 0.2553, loss_mask: 2.3488, loss: 3.5892
2023-02-09 21:06:39,395 - mmdet - INFO - Epoch [1][5/22]	lr: 1.259e-03, eta: 0:05:23, time: 0.855, data_time: 0.166, memory: 11417, loss_rpn_cls: 0.0289, loss_rpn_bbox: 0.0252, loss_cls: 0.7402, acc: 94.1406, loss_bbox: 0.2149, loss_mask: 0.6714, loss: 1.6806
2023-02-09 21:06:40,319 - mmdet - INFO - Epoch [1][6/22]	lr: 1.558e-03, eta: 0:05:01, time: 0.924, data_time: 0.229, memory: 11417, loss_rpn_cls: 0.0362, loss_rpn_bbox: 0.0314, loss_cls: 0.5219, acc: 93.6849, loss_bbox: 0.2265, loss_mask: 0.4363, loss: 1.2523
2023-02-09 21:06:41,170 - mmdet - INFO - Epoch [1][7/22]	lr: 1.858e-03, eta: 0:04:42, time: 0.851, data_time: 0.168, memory: 11417, loss_rpn_cls: 0.0481, loss_rpn_bbox: 0.0202, loss_cls: 0.3200, acc: 95.0846, loss_bbox: 0.1703, loss_mask: 0.5945, loss: 1.1531
2023-02-09 21:06:42,053 - mmdet - INFO - Epoch [1][8/22]	lr: 2.158e-03, eta: 0:04:29, time: 0.883, data_time: 0.201, memory: 11417, loss_rpn_cls: 0.0578, loss_rpn_bbox: 0.0252, loss_cls: 0.2315, acc: 95.0358, loss_bbox: 0.1862, loss_mask: 0.5485, loss: 1.0492
2023-02-09 21:06:42,918 - mmdet - INFO - Epoch [1][9/22]	lr: 2.458e-03, eta: 0:04:19, time: 0.865, data_time: 0.185, memory: 11417, loss_rpn_cls: 0.0476, loss_rpn_bbox: 0.0277, loss_cls: 0.2412, acc: 95.1497, loss_bbox: 0.1790, loss_mask: 0.6479, loss: 1.1434
2023-02-09 21:06:43,786 - mmdet - INFO - Epoch [1][10/22]	lr: 2.757e-03, eta: 0:04:10, time: 0.869, data_time: 0.189, memory: 11417, loss_rpn_cls: 0.0428, loss_rpn_bbox: 0.0268, loss_cls: 0.2999, acc: 95.1335, loss_bbox: 0.1819, loss_mask: 0.7856, loss: 1.3370
2023-02-09 21:06:44,669 - mmdet - INFO - Epoch [1][11/22]	lr: 3.057e-03, eta: 0:04:03, time: 0.882, data_time: 0.191, memory: 11417, loss_rpn_cls: 0.0590, loss_rpn_bbox: 0.0321, loss_cls: 0.3267, acc: 95.1172, loss_bbox: 0.1867, loss_mask: 0.4441, loss: 1.0485
2023-02-09 21:06:45,519 - mmdet - INFO - Epoch [1][12/22]	lr: 3.357e-03, eta: 0:03:56, time: 0.851, data_time: 0.176, memory: 11417, loss_rpn_cls: 0.0368, loss_rpn_bbox: 0.0166, loss_cls: 0.2643, acc: 95.3939, loss_bbox: 0.1669, loss_mask: 0.7892, loss: 1.2738
2023-02-09 21:06:46,387 - mmdet - INFO - Epoch [1][13/22]	lr: 3.656e-03, eta: 0:03:51, time: 0.867, data_time: 0.203, memory: 11417, loss_rpn_cls: 0.0350, loss_rpn_bbox: 0.0237, loss_cls: 0.2088, acc: 95.2474, loss_bbox: 0.1788, loss_mask: 0.4044, loss: 0.8507
2023-02-09 21:06:47,238 - mmdet - INFO - Epoch [1][14/22]	lr: 3.956e-03, eta: 0:03:46, time: 0.851, data_time: 0.197, memory: 11417, loss_rpn_cls: 0.0388, loss_rpn_bbox: 0.0196, loss_cls: 0.1658, acc: 96.1589, loss_bbox: 0.1359, loss_mask: 0.3637, loss: 0.7238
2023-02-09 21:06:48,075 - mmdet - INFO - Epoch [1][15/22]	lr: 4.256e-03, eta: 0:03:41, time: 0.836, data_time: 0.167, memory: 11417, loss_rpn_cls: 0.0570, loss_rpn_bbox: 0.0327, loss_cls: 0.2098, acc: 95.0521, loss_bbox: 0.1831, loss_mask: 0.4742, loss: 0.9568
2023-02-09 21:06:48,919 - mmdet - INFO - Epoch [1][16/22]	lr: 4.555e-03, eta: 0:03:37, time: 0.844, data_time: 0.183, memory: 11417, loss_rpn_cls: 0.0508, loss_rpn_bbox: 0.0339, loss_cls: 0.2102, acc: 95.1660, loss_bbox: 0.1790, loss_mask: 0.3382, loss: 0.8121
2023-02-09 21:06:49,738 - mmdet - INFO - Epoch [1][17/22]	lr: 4.855e-03, eta: 0:03:33, time: 0.820, data_time: 0.164, memory: 11417, loss_rpn_cls: 0.0378, loss_rpn_bbox: 0.0184, loss_cls: 0.1613, acc: 96.2565, loss_bbox: 0.1403, loss_mask: 0.3619, loss: 0.7198
2023-02-09 21:06:50,575 - mmdet - INFO - Epoch [1][18/22]	lr: 5.155e-03, eta: 0:03:29, time: 0.837, data_time: 0.166, memory: 11417, loss_rpn_cls: 0.0323, loss_rpn_bbox: 0.0168, loss_cls: 0.1897, acc: 95.0358, loss_bbox: 0.1836, loss_mask: 0.3309, loss: 0.7533
2023-02-09 21:06:51,437 - mmdet - INFO - Epoch [1][19/22]	lr: 5.455e-03, eta: 0:03:27, time: 0.862, data_time: 0.186, memory: 11417, loss_rpn_cls: 0.0329, loss_rpn_bbox: 0.0226, loss_cls: 0.1718, acc: 95.3613, loss_bbox: 0.1739, loss_mask: 0.2903, loss: 0.6914
2023-02-09 21:06:52,303 - mmdet - INFO - Epoch [1][20/22]	lr: 5.754e-03, eta: 0:03:24, time: 0.866, data_time: 0.187, memory: 11417, loss_rpn_cls: 0.0308, loss_rpn_bbox: 0.0201, loss_cls: 0.1973, acc: 94.5475, loss_bbox: 0.2049, loss_mask: 0.2918, loss: 0.7449
2023-02-09 21:06:53,189 - mmdet - INFO - Epoch [1][21/22]	lr: 6.054e-03, eta: 0:03:22, time: 0.885, data_time: 0.169, memory: 11480, loss_rpn_cls: 0.0253, loss_rpn_bbox: 0.0246, loss_cls: 0.2815, acc: 91.5039, loss_bbox: 0.3264, loss_mask: 0.2460, loss: 0.9038
2023-02-09 21:06:54,041 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:06:54,041 - mmdet - INFO - Epoch [1][22/22]	lr: 6.354e-03, eta: 0:03:19, time: 0.852, data_time: 0.159, memory: 11480, loss_rpn_cls: 0.0221, loss_rpn_bbox: 0.0318, loss_cls: 0.2218, acc: 93.1641, loss_bbox: 0.2694, loss_mask: 0.2669, loss: 0.8121
2023-02-09 21:07:02,790 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:07:03,361 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.114
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.318
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.052
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.152
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.115
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.257
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.425

2023-02-09 21:07:03,361 - mmdet - INFO - Evaluating segm...
2023-02-09 21:07:04,113 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.171
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.354
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.018
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.186
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.571
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.571
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.571
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.357
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.581

2023-02-09 21:07:04,120 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:07:04,120 - mmdet - INFO - Epoch(val) [1][56]	bbox_mAP: 0.1140, bbox_mAP_50: 0.3181, bbox_mAP_75: 0.0515, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.1522, bbox_mAP_l: 0.1151, bbox_mAP_copypaste: 0.1140 0.3181 0.0515 -1.0000 0.1522 0.1151, segm_mAP: 0.1707, segm_mAP_50: 0.3536, segm_mAP_75: 0.1489, segm_mAP_s: -1.0000, segm_mAP_m: 0.0176, segm_mAP_l: 0.1865, segm_mAP_copypaste: 0.1707 0.3536 0.1489 -1.0000 0.0176 0.1865
2023-02-09 21:07:08,040 - mmdet - INFO - Epoch [2][1/22]	lr: 6.653e-03, eta: 0:03:42, time: 3.806, data_time: 3.079, memory: 11480, loss_rpn_cls: 0.0265, loss_rpn_bbox: 0.0268, loss_cls: 0.2239, acc: 93.1478, loss_bbox: 0.2675, loss_mask: 0.2112, loss: 0.7559
2023-02-09 21:07:08,942 - mmdet - INFO - Epoch [2][2/22]	lr: 6.953e-03, eta: 0:03:39, time: 0.902, data_time: 0.212, memory: 11480, loss_rpn_cls: 0.0385, loss_rpn_bbox: 0.0245, loss_cls: 0.1938, acc: 93.7825, loss_bbox: 0.2290, loss_mask: 0.2402, loss: 0.7259
2023-02-09 21:07:09,882 - mmdet - INFO - Epoch [2][3/22]	lr: 7.253e-03, eta: 0:03:36, time: 0.940, data_time: 0.230, memory: 11480, loss_rpn_cls: 0.0145, loss_rpn_bbox: 0.0180, loss_cls: 0.2139, acc: 91.8131, loss_bbox: 0.3148, loss_mask: 0.2410, loss: 0.8022
2023-02-09 21:07:10,790 - mmdet - INFO - Epoch [2][4/22]	lr: 7.552e-03, eta: 0:03:34, time: 0.908, data_time: 0.205, memory: 11480, loss_rpn_cls: 0.0202, loss_rpn_bbox: 0.0226, loss_cls: 0.2061, acc: 91.9434, loss_bbox: 0.3144, loss_mask: 0.2386, loss: 0.8019
2023-02-09 21:07:11,697 - mmdet - INFO - Epoch [2][5/22]	lr: 7.852e-03, eta: 0:03:31, time: 0.906, data_time: 0.200, memory: 11480, loss_rpn_cls: 0.0142, loss_rpn_bbox: 0.0221, loss_cls: 0.1881, acc: 92.8060, loss_bbox: 0.2780, loss_mask: 0.3075, loss: 0.8100
2023-02-09 21:07:12,560 - mmdet - INFO - Epoch [2][6/22]	lr: 8.152e-03, eta: 0:03:29, time: 0.864, data_time: 0.177, memory: 11480, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0322, loss_cls: 0.1616, acc: 93.8802, loss_bbox: 0.2229, loss_mask: 0.2777, loss: 0.7100
2023-02-09 21:07:13,409 - mmdet - INFO - Epoch [2][7/22]	lr: 8.452e-03, eta: 0:03:26, time: 0.849, data_time: 0.170, memory: 11480, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0105, loss_cls: 0.1300, acc: 94.7266, loss_bbox: 0.1944, loss_mask: 0.1650, loss: 0.5124
2023-02-09 21:07:14,272 - mmdet - INFO - Epoch [2][8/22]	lr: 8.751e-03, eta: 0:03:23, time: 0.863, data_time: 0.178, memory: 11480, loss_rpn_cls: 0.0215, loss_rpn_bbox: 0.0203, loss_cls: 0.1346, acc: 94.3034, loss_bbox: 0.2029, loss_mask: 0.3056, loss: 0.6850
2023-02-09 21:07:15,135 - mmdet - INFO - Epoch [2][9/22]	lr: 9.051e-03, eta: 0:03:21, time: 0.863, data_time: 0.170, memory: 11480, loss_rpn_cls: 0.0190, loss_rpn_bbox: 0.0120, loss_cls: 0.2125, acc: 93.2454, loss_bbox: 0.2599, loss_mask: 0.2420, loss: 0.7453
2023-02-09 21:07:16,049 - mmdet - INFO - Epoch [2][10/22]	lr: 9.351e-03, eta: 0:03:19, time: 0.915, data_time: 0.201, memory: 11480, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0162, loss_cls: 0.1537, acc: 92.5456, loss_bbox: 0.3128, loss_mask: 0.1582, loss: 0.6549
2023-02-09 21:07:16,941 - mmdet - INFO - Epoch [2][11/22]	lr: 9.650e-03, eta: 0:03:17, time: 0.892, data_time: 0.197, memory: 11480, loss_rpn_cls: 0.0143, loss_rpn_bbox: 0.0106, loss_cls: 0.1780, acc: 95.7520, loss_bbox: 0.2246, loss_mask: 0.1802, loss: 0.6077
2023-02-09 21:07:17,870 - mmdet - INFO - Epoch [2][12/22]	lr: 9.950e-03, eta: 0:03:15, time: 0.928, data_time: 0.210, memory: 11591, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0195, loss_cls: 0.1366, acc: 95.0684, loss_bbox: 0.3269, loss_mask: 0.1421, loss: 0.6352
2023-02-09 21:07:18,782 - mmdet - INFO - Epoch [2][13/22]	lr: 1.025e-02, eta: 0:03:14, time: 0.912, data_time: 0.206, memory: 11591, loss_rpn_cls: 0.0113, loss_rpn_bbox: 0.0152, loss_cls: 0.1438, acc: 94.2871, loss_bbox: 0.2806, loss_mask: 0.2132, loss: 0.6642
2023-02-09 21:07:19,687 - mmdet - INFO - Epoch [2][14/22]	lr: 1.055e-02, eta: 0:03:12, time: 0.905, data_time: 0.179, memory: 11591, loss_rpn_cls: 0.0169, loss_rpn_bbox: 0.0221, loss_cls: 0.1077, acc: 95.2637, loss_bbox: 0.2789, loss_mask: 0.1581, loss: 0.5836
2023-02-09 21:07:20,581 - mmdet - INFO - Epoch [2][15/22]	lr: 1.085e-02, eta: 0:03:10, time: 0.894, data_time: 0.184, memory: 11591, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0117, loss_cls: 0.1093, acc: 95.6055, loss_bbox: 0.2601, loss_mask: 0.1328, loss: 0.5199
2023-02-09 21:07:21,473 - mmdet - INFO - Epoch [2][16/22]	lr: 1.115e-02, eta: 0:03:08, time: 0.892, data_time: 0.178, memory: 11591, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0138, loss_cls: 0.0785, acc: 96.7936, loss_bbox: 0.2466, loss_mask: 0.1355, loss: 0.4781
2023-02-09 21:07:22,359 - mmdet - INFO - Epoch [2][17/22]	lr: 1.145e-02, eta: 0:03:07, time: 0.886, data_time: 0.165, memory: 11591, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0226, loss_cls: 0.1201, acc: 94.9707, loss_bbox: 0.2838, loss_mask: 0.1759, loss: 0.6114
2023-02-09 21:07:23,268 - mmdet - INFO - Epoch [2][18/22]	lr: 1.175e-02, eta: 0:03:05, time: 0.909, data_time: 0.196, memory: 11591, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0158, loss_cls: 0.1067, acc: 95.3776, loss_bbox: 0.2567, loss_mask: 0.1599, loss: 0.5439
2023-02-09 21:07:24,197 - mmdet - INFO - Epoch [2][19/22]	lr: 1.205e-02, eta: 0:03:03, time: 0.929, data_time: 0.208, memory: 11637, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0163, loss_cls: 0.1138, acc: 95.2637, loss_bbox: 0.2782, loss_mask: 0.1514, loss: 0.5653
2023-02-09 21:07:25,152 - mmdet - INFO - Epoch [2][20/22]	lr: 1.235e-02, eta: 0:03:02, time: 0.955, data_time: 0.223, memory: 11794, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0144, loss_cls: 0.1327, acc: 94.7266, loss_bbox: 0.2810, loss_mask: 0.1883, loss: 0.6204
2023-02-09 21:07:26,023 - mmdet - INFO - Epoch [2][21/22]	lr: 1.265e-02, eta: 0:03:00, time: 0.871, data_time: 0.144, memory: 11794, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0178, loss_cls: 0.0937, acc: 96.2891, loss_bbox: 0.2301, loss_mask: 0.1584, loss: 0.5034
2023-02-09 21:07:26,938 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:07:26,938 - mmdet - INFO - Epoch [2][22/22]	lr: 1.295e-02, eta: 0:02:59, time: 0.915, data_time: 0.171, memory: 12170, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0169, loss_cls: 0.1116, acc: 95.6055, loss_bbox: 0.2714, loss_mask: 0.1612, loss: 0.5647
2023-02-09 21:07:30,282 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:07:30,404 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.549
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.909
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.592
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.305
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.562
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.644
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.644
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.644
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.443
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.653

2023-02-09 21:07:30,405 - mmdet - INFO - Evaluating segm...
2023-02-09 21:07:30,539 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.657
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.903
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.812
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.355
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.678
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.741
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.741
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.741
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.600
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.747

2023-02-09 21:07:30,541 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:07:30,541 - mmdet - INFO - Epoch(val) [2][56]	bbox_mAP: 0.5485, bbox_mAP_50: 0.9092, bbox_mAP_75: 0.5924, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.3052, bbox_mAP_l: 0.5617, bbox_mAP_copypaste: 0.5485 0.9092 0.5924 -1.0000 0.3052 0.5617, segm_mAP: 0.6566, segm_mAP_50: 0.9031, segm_mAP_75: 0.8118, segm_mAP_s: -1.0000, segm_mAP_m: 0.3551, segm_mAP_l: 0.6782, segm_mAP_copypaste: 0.6566 0.9031 0.8118 -1.0000 0.3551 0.6782
2023-02-09 21:07:34,452 - mmdet - INFO - Epoch [3][1/22]	lr: 1.325e-02, eta: 0:03:09, time: 3.795, data_time: 3.071, memory: 12170, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0161, loss_cls: 0.0867, acc: 96.5169, loss_bbox: 0.1405, loss_mask: 0.1345, loss: 0.3852
2023-02-09 21:07:35,363 - mmdet - INFO - Epoch [3][2/22]	lr: 1.355e-02, eta: 0:03:07, time: 0.911, data_time: 0.186, memory: 12170, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0159, loss_cls: 0.1057, acc: 95.6217, loss_bbox: 0.1901, loss_mask: 0.2044, loss: 0.5209
2023-02-09 21:07:36,298 - mmdet - INFO - Epoch [3][3/22]	lr: 1.385e-02, eta: 0:03:05, time: 0.935, data_time: 0.187, memory: 12170, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0122, loss_cls: 0.0842, acc: 96.5495, loss_bbox: 0.1970, loss_mask: 0.1620, loss: 0.4597
2023-02-09 21:07:37,220 - mmdet - INFO - Epoch [3][4/22]	lr: 1.415e-02, eta: 0:03:04, time: 0.922, data_time: 0.190, memory: 12170, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0130, loss_cls: 0.1007, acc: 96.2402, loss_bbox: 0.1908, loss_mask: 0.1908, loss: 0.4992
2023-02-09 21:07:38,135 - mmdet - INFO - Epoch [3][5/22]	lr: 1.445e-02, eta: 0:03:02, time: 0.913, data_time: 0.184, memory: 12170, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0110, loss_cls: 0.0804, acc: 96.3542, loss_bbox: 0.1773, loss_mask: 0.1252, loss: 0.3989
2023-02-09 21:07:39,040 - mmdet - INFO - Epoch [3][6/22]	lr: 1.475e-02, eta: 0:03:01, time: 0.907, data_time: 0.179, memory: 12170, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0123, loss_cls: 0.0986, acc: 96.3379, loss_bbox: 0.1721, loss_mask: 0.1607, loss: 0.4496
2023-02-09 21:07:39,896 - mmdet - INFO - Epoch [3][7/22]	lr: 1.505e-02, eta: 0:02:59, time: 0.856, data_time: 0.150, memory: 12170, loss_rpn_cls: 0.0057, loss_rpn_bbox: 0.0141, loss_cls: 0.0788, acc: 96.7936, loss_bbox: 0.1435, loss_mask: 0.1479, loss: 0.3899
2023-02-09 21:07:40,775 - mmdet - INFO - Epoch [3][8/22]	lr: 1.534e-02, eta: 0:02:57, time: 0.879, data_time: 0.174, memory: 12170, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0153, loss_cls: 0.0842, acc: 96.6960, loss_bbox: 0.1467, loss_mask: 0.1311, loss: 0.3811
2023-02-09 21:07:41,677 - mmdet - INFO - Epoch [3][9/22]	lr: 1.564e-02, eta: 0:02:56, time: 0.902, data_time: 0.198, memory: 12170, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0141, loss_cls: 0.0740, acc: 97.1354, loss_bbox: 0.1301, loss_mask: 0.1273, loss: 0.3503
2023-02-09 21:07:42,585 - mmdet - INFO - Epoch [3][10/22]	lr: 1.594e-02, eta: 0:02:54, time: 0.908, data_time: 0.173, memory: 12170, loss_rpn_cls: 0.0089, loss_rpn_bbox: 0.0195, loss_cls: 0.1248, acc: 94.8730, loss_bbox: 0.1636, loss_mask: 0.1484, loss: 0.4652
2023-02-09 21:07:43,489 - mmdet - INFO - Epoch [3][11/22]	lr: 1.624e-02, eta: 0:02:53, time: 0.904, data_time: 0.193, memory: 12170, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0086, loss_cls: 0.0740, acc: 96.9727, loss_bbox: 0.1345, loss_mask: 0.1193, loss: 0.3410
2023-02-09 21:07:44,383 - mmdet - INFO - Epoch [3][12/22]	lr: 1.654e-02, eta: 0:02:51, time: 0.894, data_time: 0.174, memory: 12170, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0097, loss_cls: 0.0826, acc: 96.4030, loss_bbox: 0.1151, loss_mask: 0.1277, loss: 0.3429
2023-02-09 21:07:45,326 - mmdet - INFO - Epoch [3][13/22]	lr: 1.684e-02, eta: 0:02:50, time: 0.942, data_time: 0.220, memory: 12170, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0137, loss_cls: 0.0859, acc: 96.4355, loss_bbox: 0.1456, loss_mask: 0.1190, loss: 0.3680
2023-02-09 21:07:46,201 - mmdet - INFO - Epoch [3][14/22]	lr: 1.714e-02, eta: 0:02:48, time: 0.875, data_time: 0.164, memory: 12170, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0145, loss_cls: 0.0866, acc: 96.6146, loss_bbox: 0.1406, loss_mask: 0.1223, loss: 0.3695
2023-02-09 21:07:47,087 - mmdet - INFO - Epoch [3][15/22]	lr: 1.744e-02, eta: 0:02:47, time: 0.886, data_time: 0.156, memory: 12170, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0191, loss_cls: 0.0950, acc: 96.3053, loss_bbox: 0.1764, loss_mask: 0.1547, loss: 0.4494
2023-02-09 21:07:47,975 - mmdet - INFO - Epoch [3][16/22]	lr: 1.774e-02, eta: 0:02:45, time: 0.888, data_time: 0.178, memory: 12170, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0103, loss_cls: 0.0769, acc: 97.2656, loss_bbox: 0.1144, loss_mask: 0.1350, loss: 0.3456
2023-02-09 21:07:48,831 - mmdet - INFO - Epoch [3][17/22]	lr: 1.804e-02, eta: 0:02:44, time: 0.857, data_time: 0.171, memory: 12170, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0087, loss_cls: 0.0615, acc: 97.1191, loss_bbox: 0.0920, loss_mask: 0.0946, loss: 0.2587
2023-02-09 21:07:49,722 - mmdet - INFO - Epoch [3][18/22]	lr: 1.834e-02, eta: 0:02:42, time: 0.891, data_time: 0.168, memory: 12170, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0099, loss_cls: 0.0935, acc: 96.3542, loss_bbox: 0.1476, loss_mask: 0.1258, loss: 0.3793
2023-02-09 21:07:50,632 - mmdet - INFO - Epoch [3][19/22]	lr: 1.864e-02, eta: 0:02:41, time: 0.910, data_time: 0.184, memory: 12170, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0116, loss_cls: 0.0975, acc: 96.0449, loss_bbox: 0.1532, loss_mask: 0.1357, loss: 0.4087
2023-02-09 21:07:51,540 - mmdet - INFO - Epoch [3][20/22]	lr: 1.894e-02, eta: 0:02:40, time: 0.907, data_time: 0.194, memory: 12170, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0128, loss_cls: 0.0828, acc: 96.4681, loss_bbox: 0.1404, loss_mask: 0.1171, loss: 0.3590
2023-02-09 21:07:52,379 - mmdet - INFO - Epoch [3][21/22]	lr: 1.924e-02, eta: 0:02:38, time: 0.839, data_time: 0.139, memory: 12170, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0121, loss_cls: 0.0694, acc: 97.1354, loss_bbox: 0.1152, loss_mask: 0.1077, loss: 0.3061
2023-02-09 21:07:53,246 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:07:53,246 - mmdet - INFO - Epoch [3][22/22]	lr: 1.954e-02, eta: 0:02:37, time: 0.867, data_time: 0.141, memory: 12173, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0136, loss_cls: 0.0794, acc: 96.7611, loss_bbox: 0.1815, loss_mask: 0.1241, loss: 0.4038
2023-02-09 21:07:56,215 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:07:56,306 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.653
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.956
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.799
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.592
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.657
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.726
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.726
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.726
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.686
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.727

2023-02-09 21:07:56,306 - mmdet - INFO - Evaluating segm...
2023-02-09 21:07:56,398 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.741
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.956
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.917
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.480
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.761
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.787
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.787
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.787
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.671
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.792

2023-02-09 21:07:56,399 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:07:56,399 - mmdet - INFO - Epoch(val) [3][56]	bbox_mAP: 0.6530, bbox_mAP_50: 0.9558, bbox_mAP_75: 0.7986, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.5924, bbox_mAP_l: 0.6568, bbox_mAP_copypaste: 0.6530 0.9558 0.7986 -1.0000 0.5924 0.6568, segm_mAP: 0.7408, segm_mAP_50: 0.9558, segm_mAP_75: 0.9172, segm_mAP_s: -1.0000, segm_mAP_m: 0.4797, segm_mAP_l: 0.7610, segm_mAP_copypaste: 0.7408 0.9558 0.9172 -1.0000 0.4797 0.7610
2023-02-09 21:08:00,301 - mmdet - INFO - Epoch [4][1/22]	lr: 1.984e-02, eta: 0:02:42, time: 3.786, data_time: 3.042, memory: 12173, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0121, loss_cls: 0.0806, acc: 96.5332, loss_bbox: 0.1384, loss_mask: 0.1006, loss: 0.3337
2023-02-09 21:08:01,116 - mmdet - INFO - Epoch [4][2/22]	lr: 2.014e-02, eta: 0:02:41, time: 0.814, data_time: 0.111, memory: 12173, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0085, loss_cls: 0.0640, acc: 97.2493, loss_bbox: 0.1020, loss_mask: 0.1121, loss: 0.2890
2023-02-09 21:08:02,066 - mmdet - INFO - Epoch [4][3/22]	lr: 2.044e-02, eta: 0:02:39, time: 0.950, data_time: 0.225, memory: 12173, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0143, loss_cls: 0.0818, acc: 96.7122, loss_bbox: 0.1382, loss_mask: 0.1079, loss: 0.3477
2023-02-09 21:08:02,882 - mmdet - INFO - Epoch [4][4/22]	lr: 2.074e-02, eta: 0:02:38, time: 0.816, data_time: 0.110, memory: 12173, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0140, loss_cls: 0.0732, acc: 97.0215, loss_bbox: 0.1288, loss_mask: 0.1366, loss: 0.3559
2023-02-09 21:08:03,809 - mmdet - INFO - Epoch [4][5/22]	lr: 2.104e-02, eta: 0:02:36, time: 0.927, data_time: 0.195, memory: 12173, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0128, loss_cls: 0.0788, acc: 96.7773, loss_bbox: 0.1430, loss_mask: 0.1097, loss: 0.3472
2023-02-09 21:08:04,657 - mmdet - INFO - Epoch [4][6/22]	lr: 2.134e-02, eta: 0:02:35, time: 0.849, data_time: 0.110, memory: 12173, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0200, loss_cls: 0.0710, acc: 96.9727, loss_bbox: 0.1374, loss_mask: 0.1199, loss: 0.3511
2023-02-09 21:08:05,605 - mmdet - INFO - Epoch [4][7/22]	lr: 2.164e-02, eta: 0:02:34, time: 0.948, data_time: 0.222, memory: 12173, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0080, loss_cls: 0.0613, acc: 97.6562, loss_bbox: 0.1277, loss_mask: 0.0994, loss: 0.2986
2023-02-09 21:08:06,413 - mmdet - INFO - Epoch [4][8/22]	lr: 2.194e-02, eta: 0:02:32, time: 0.808, data_time: 0.113, memory: 12173, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0122, loss_cls: 0.0544, acc: 97.9004, loss_bbox: 0.0858, loss_mask: 0.1141, loss: 0.2701
2023-02-09 21:08:07,339 - mmdet - INFO - Epoch [4][9/22]	lr: 2.224e-02, eta: 0:02:31, time: 0.927, data_time: 0.208, memory: 12173, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0097, loss_cls: 0.0703, acc: 97.2493, loss_bbox: 0.1144, loss_mask: 0.1063, loss: 0.3027
2023-02-09 21:08:08,156 - mmdet - INFO - Epoch [4][10/22]	lr: 2.254e-02, eta: 0:02:29, time: 0.817, data_time: 0.110, memory: 12173, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0090, loss_cls: 0.0575, acc: 97.7539, loss_bbox: 0.1070, loss_mask: 0.1001, loss: 0.2757
2023-02-09 21:08:09,096 - mmdet - INFO - Epoch [4][11/22]	lr: 2.284e-02, eta: 0:02:28, time: 0.939, data_time: 0.212, memory: 12173, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0098, loss_cls: 0.0585, acc: 97.5911, loss_bbox: 0.1361, loss_mask: 0.0895, loss: 0.2955
2023-02-09 21:08:09,905 - mmdet - INFO - Epoch [4][12/22]	lr: 2.314e-02, eta: 0:02:27, time: 0.809, data_time: 0.115, memory: 12173, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0093, loss_cls: 0.0570, acc: 97.6888, loss_bbox: 0.1130, loss_mask: 0.1411, loss: 0.3241
2023-02-09 21:08:10,833 - mmdet - INFO - Epoch [4][13/22]	lr: 2.344e-02, eta: 0:02:25, time: 0.928, data_time: 0.203, memory: 12173, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0139, loss_cls: 0.0637, acc: 97.4935, loss_bbox: 0.1058, loss_mask: 0.1064, loss: 0.2919
2023-02-09 21:08:11,645 - mmdet - INFO - Epoch [4][14/22]	lr: 2.374e-02, eta: 0:02:24, time: 0.812, data_time: 0.110, memory: 12173, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0101, loss_cls: 0.0624, acc: 97.4447, loss_bbox: 0.0890, loss_mask: 0.1014, loss: 0.2678
2023-02-09 21:08:12,617 - mmdet - INFO - Epoch [4][15/22]	lr: 2.404e-02, eta: 0:02:23, time: 0.971, data_time: 0.211, memory: 12465, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0115, loss_cls: 0.0715, acc: 97.4284, loss_bbox: 0.1443, loss_mask: 0.1226, loss: 0.3521
2023-02-09 21:08:13,451 - mmdet - INFO - Epoch [4][16/22]	lr: 2.434e-02, eta: 0:02:22, time: 0.834, data_time: 0.115, memory: 12465, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0077, loss_cls: 0.0523, acc: 97.6725, loss_bbox: 0.0999, loss_mask: 0.0875, loss: 0.2495
2023-02-09 21:08:14,403 - mmdet - INFO - Epoch [4][17/22]	lr: 2.464e-02, eta: 0:02:20, time: 0.953, data_time: 0.241, memory: 12465, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0154, loss_cls: 0.0610, acc: 97.5586, loss_bbox: 0.0916, loss_mask: 0.1067, loss: 0.2762
2023-02-09 21:08:15,234 - mmdet - INFO - Epoch [4][18/22]	lr: 2.494e-02, eta: 0:02:19, time: 0.831, data_time: 0.110, memory: 12465, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0089, loss_cls: 0.0620, acc: 97.6074, loss_bbox: 0.0938, loss_mask: 0.1086, loss: 0.2749
2023-02-09 21:08:16,207 - mmdet - INFO - Epoch [4][19/22]	lr: 2.523e-02, eta: 0:02:18, time: 0.973, data_time: 0.247, memory: 12465, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0090, loss_cls: 0.0581, acc: 97.6074, loss_bbox: 0.1173, loss_mask: 0.1034, loss: 0.2898
2023-02-09 21:08:17,025 - mmdet - INFO - Epoch [4][20/22]	lr: 2.553e-02, eta: 0:02:17, time: 0.818, data_time: 0.109, memory: 12465, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0115, loss_cls: 0.0575, acc: 97.6400, loss_bbox: 0.0903, loss_mask: 0.0933, loss: 0.2549
2023-02-09 21:08:18,026 - mmdet - INFO - Epoch [4][21/22]	lr: 2.583e-02, eta: 0:02:16, time: 1.001, data_time: 0.168, memory: 12465, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0114, loss_cls: 0.0651, acc: 97.4447, loss_bbox: 0.1257, loss_mask: 0.1064, loss: 0.3124
2023-02-09 21:08:18,865 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:08:18,865 - mmdet - INFO - Epoch [4][22/22]	lr: 2.613e-02, eta: 0:02:14, time: 0.839, data_time: 0.110, memory: 12465, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0085, loss_cls: 0.0542, acc: 97.9329, loss_bbox: 0.1042, loss_mask: 0.1113, loss: 0.2799
2023-02-09 21:08:21,871 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:08:21,937 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.705
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.957
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.894
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.661
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.711
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.771
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.771
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.771
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.671
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.775

2023-02-09 21:08:21,937 - mmdet - INFO - Evaluating segm...
2023-02-09 21:08:22,012 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.780
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.949
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.912
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.573
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.799
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.729
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.825

2023-02-09 21:08:22,013 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:08:22,013 - mmdet - INFO - Epoch(val) [4][56]	bbox_mAP: 0.7051, bbox_mAP_50: 0.9568, bbox_mAP_75: 0.8941, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.6609, bbox_mAP_l: 0.7115, bbox_mAP_copypaste: 0.7051 0.9568 0.8941 -1.0000 0.6609 0.7115, segm_mAP: 0.7805, segm_mAP_50: 0.9485, segm_mAP_75: 0.9123, segm_mAP_s: -1.0000, segm_mAP_m: 0.5731, segm_mAP_l: 0.7995, segm_mAP_copypaste: 0.7805 0.9485 0.9123 -1.0000 0.5731 0.7995
2023-02-09 21:08:26,029 - mmdet - INFO - Epoch [5][1/22]	lr: 2.643e-03, eta: 0:02:17, time: 3.904, data_time: 3.157, memory: 12465, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0126, loss_cls: 0.0674, acc: 97.2982, loss_bbox: 0.1300, loss_mask: 0.0994, loss: 0.3108
2023-02-09 21:08:26,843 - mmdet - INFO - Epoch [5][2/22]	lr: 2.673e-03, eta: 0:02:16, time: 0.815, data_time: 0.110, memory: 12465, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0084, loss_cls: 0.0416, acc: 98.3236, loss_bbox: 0.0820, loss_mask: 0.0895, loss: 0.2225
2023-02-09 21:08:27,726 - mmdet - INFO - Epoch [5][3/22]	lr: 2.703e-03, eta: 0:02:15, time: 0.882, data_time: 0.169, memory: 12465, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0093, loss_cls: 0.0467, acc: 98.0794, loss_bbox: 0.0913, loss_mask: 0.1111, loss: 0.2615
2023-02-09 21:08:28,634 - mmdet - INFO - Epoch [5][4/22]	lr: 2.733e-03, eta: 0:02:14, time: 0.908, data_time: 0.180, memory: 12465, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0075, loss_cls: 0.0521, acc: 98.1771, loss_bbox: 0.0948, loss_mask: 0.0942, loss: 0.2516
2023-02-09 21:08:29,523 - mmdet - INFO - Epoch [5][5/22]	lr: 2.763e-03, eta: 0:02:12, time: 0.889, data_time: 0.178, memory: 12465, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0099, loss_cls: 0.0409, acc: 98.5352, loss_bbox: 0.0771, loss_mask: 0.0843, loss: 0.2135
2023-02-09 21:08:30,510 - mmdet - INFO - Epoch [5][6/22]	lr: 2.793e-03, eta: 0:02:11, time: 0.988, data_time: 0.250, memory: 12465, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0108, loss_cls: 0.0616, acc: 97.5423, loss_bbox: 0.1061, loss_mask: 0.0799, loss: 0.2602
2023-02-09 21:08:31,383 - mmdet - INFO - Epoch [5][7/22]	lr: 2.823e-03, eta: 0:02:10, time: 0.873, data_time: 0.161, memory: 12465, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0067, loss_cls: 0.0556, acc: 97.8516, loss_bbox: 0.0976, loss_mask: 0.0869, loss: 0.2482
2023-02-09 21:08:32,277 - mmdet - INFO - Epoch [5][8/22]	lr: 2.853e-03, eta: 0:02:09, time: 0.894, data_time: 0.168, memory: 12465, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0086, loss_cls: 0.0389, acc: 98.4538, loss_bbox: 0.0720, loss_mask: 0.0818, loss: 0.2025
2023-02-09 21:08:33,193 - mmdet - INFO - Epoch [5][9/22]	lr: 2.883e-03, eta: 0:02:07, time: 0.916, data_time: 0.173, memory: 12465, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0089, loss_cls: 0.0590, acc: 97.5749, loss_bbox: 0.1143, loss_mask: 0.0784, loss: 0.2618
2023-02-09 21:08:34,113 - mmdet - INFO - Epoch [5][10/22]	lr: 2.913e-03, eta: 0:02:06, time: 0.920, data_time: 0.196, memory: 12465, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0065, loss_cls: 0.0475, acc: 98.0794, loss_bbox: 0.0956, loss_mask: 0.0885, loss: 0.2402
2023-02-09 21:08:35,008 - mmdet - INFO - Epoch [5][11/22]	lr: 2.943e-03, eta: 0:02:05, time: 0.895, data_time: 0.167, memory: 12465, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0065, loss_cls: 0.0456, acc: 98.2096, loss_bbox: 0.0812, loss_mask: 0.1005, loss: 0.2354
2023-02-09 21:08:35,938 - mmdet - INFO - Epoch [5][12/22]	lr: 2.973e-03, eta: 0:02:04, time: 0.930, data_time: 0.218, memory: 12465, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0092, loss_cls: 0.0406, acc: 98.4538, loss_bbox: 0.0688, loss_mask: 0.0905, loss: 0.2114
2023-02-09 21:08:36,842 - mmdet - INFO - Epoch [5][13/22]	lr: 3.003e-03, eta: 0:02:03, time: 0.903, data_time: 0.174, memory: 12465, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0109, loss_cls: 0.0525, acc: 98.0143, loss_bbox: 0.1017, loss_mask: 0.0898, loss: 0.2566
2023-02-09 21:08:37,721 - mmdet - INFO - Epoch [5][14/22]	lr: 3.033e-03, eta: 0:02:01, time: 0.879, data_time: 0.160, memory: 12465, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0063, loss_cls: 0.0561, acc: 97.6888, loss_bbox: 0.0752, loss_mask: 0.0867, loss: 0.2270
2023-02-09 21:08:38,653 - mmdet - INFO - Epoch [5][15/22]	lr: 3.063e-03, eta: 0:02:00, time: 0.931, data_time: 0.175, memory: 12465, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0090, loss_cls: 0.0558, acc: 97.9167, loss_bbox: 0.1179, loss_mask: 0.1065, loss: 0.2919
2023-02-09 21:08:39,528 - mmdet - INFO - Epoch [5][16/22]	lr: 3.093e-03, eta: 0:01:59, time: 0.876, data_time: 0.163, memory: 12465, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0096, loss_cls: 0.0412, acc: 98.3073, loss_bbox: 0.0745, loss_mask: 0.0878, loss: 0.2145
2023-02-09 21:08:40,413 - mmdet - INFO - Epoch [5][17/22]	lr: 3.123e-03, eta: 0:01:58, time: 0.884, data_time: 0.178, memory: 12465, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0076, loss_cls: 0.0382, acc: 98.4700, loss_bbox: 0.0641, loss_mask: 0.0949, loss: 0.2084
2023-02-09 21:08:41,317 - mmdet - INFO - Epoch [5][18/22]	lr: 3.153e-03, eta: 0:01:57, time: 0.904, data_time: 0.178, memory: 12465, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0075, loss_cls: 0.0485, acc: 98.1608, loss_bbox: 0.0715, loss_mask: 0.1044, loss: 0.2328
2023-02-09 21:08:42,217 - mmdet - INFO - Epoch [5][19/22]	lr: 3.183e-03, eta: 0:01:56, time: 0.901, data_time: 0.169, memory: 12465, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0071, loss_cls: 0.0564, acc: 97.6725, loss_bbox: 0.0955, loss_mask: 0.1027, loss: 0.2632
2023-02-09 21:08:43,122 - mmdet - INFO - Epoch [5][20/22]	lr: 3.213e-03, eta: 0:01:54, time: 0.904, data_time: 0.168, memory: 12465, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0090, loss_cls: 0.0690, acc: 96.9564, loss_bbox: 0.1305, loss_mask: 0.1015, loss: 0.3136
2023-02-09 21:08:43,990 - mmdet - INFO - Epoch [5][21/22]	lr: 3.243e-03, eta: 0:01:53, time: 0.868, data_time: 0.137, memory: 12465, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0074, loss_cls: 0.0434, acc: 98.3561, loss_bbox: 0.0781, loss_mask: 0.0812, loss: 0.2117
2023-02-09 21:08:44,831 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:08:44,831 - mmdet - INFO - Epoch [5][22/22]	lr: 3.273e-03, eta: 0:01:52, time: 0.841, data_time: 0.141, memory: 12465, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0074, loss_cls: 0.0440, acc: 98.2585, loss_bbox: 0.0931, loss_mask: 0.0808, loss: 0.2268
2023-02-09 21:08:47,738 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:08:47,804 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.739
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.956
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.905
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.673
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.793
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.793
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.793
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.795

2023-02-09 21:08:47,804 - mmdet - INFO - Evaluating segm...
2023-02-09 21:08:47,883 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.793
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.948
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.917
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.613
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.804
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.826
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.826
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.826
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.729
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.831

2023-02-09 21:08:47,884 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:08:47,884 - mmdet - INFO - Epoch(val) [5][56]	bbox_mAP: 0.7395, bbox_mAP_50: 0.9557, bbox_mAP_75: 0.9055, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.6731, bbox_mAP_l: 0.7433, bbox_mAP_copypaste: 0.7395 0.9557 0.9055 -1.0000 0.6731 0.7433, segm_mAP: 0.7935, segm_mAP_50: 0.9479, segm_mAP_75: 0.9165, segm_mAP_s: -1.0000, segm_mAP_m: 0.6135, segm_mAP_l: 0.8037, segm_mAP_copypaste: 0.7935 0.9479 0.9165 -1.0000 0.6135 0.8037
2023-02-09 21:08:51,850 - mmdet - INFO - Epoch [6][1/22]	lr: 3.303e-03, eta: 0:01:54, time: 3.854, data_time: 3.102, memory: 12465, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0090, loss_cls: 0.0543, acc: 97.9167, loss_bbox: 0.1060, loss_mask: 0.0997, loss: 0.2700
2023-02-09 21:08:52,667 - mmdet - INFO - Epoch [6][2/22]	lr: 3.333e-03, eta: 0:01:53, time: 0.817, data_time: 0.110, memory: 12465, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0087, loss_cls: 0.0398, acc: 98.4212, loss_bbox: 0.0857, loss_mask: 0.1016, loss: 0.2369
2023-02-09 21:08:53,519 - mmdet - INFO - Epoch [6][3/22]	lr: 3.363e-03, eta: 0:01:51, time: 0.851, data_time: 0.160, memory: 12465, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0037, loss_cls: 0.0365, acc: 98.4375, loss_bbox: 0.0639, loss_mask: 0.0746, loss: 0.1793
2023-02-09 21:08:54,426 - mmdet - INFO - Epoch [6][4/22]	lr: 3.393e-03, eta: 0:01:50, time: 0.907, data_time: 0.164, memory: 12465, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0109, loss_cls: 0.0622, acc: 97.4609, loss_bbox: 0.1008, loss_mask: 0.1013, loss: 0.2762
2023-02-09 21:08:55,306 - mmdet - INFO - Epoch [6][5/22]	lr: 3.423e-03, eta: 0:01:49, time: 0.880, data_time: 0.156, memory: 12465, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0076, loss_cls: 0.0438, acc: 98.2910, loss_bbox: 0.0850, loss_mask: 0.0776, loss: 0.2151
2023-02-09 21:08:56,259 - mmdet - INFO - Epoch [6][6/22]	lr: 3.453e-03, eta: 0:01:48, time: 0.952, data_time: 0.197, memory: 12465, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0070, loss_cls: 0.0466, acc: 98.2747, loss_bbox: 0.0933, loss_mask: 0.0887, loss: 0.2373
2023-02-09 21:08:57,166 - mmdet - INFO - Epoch [6][7/22]	lr: 3.483e-03, eta: 0:01:47, time: 0.908, data_time: 0.168, memory: 12465, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0069, loss_cls: 0.0670, acc: 97.4121, loss_bbox: 0.0825, loss_mask: 0.0728, loss: 0.2314
2023-02-09 21:08:58,064 - mmdet - INFO - Epoch [6][8/22]	lr: 3.512e-03, eta: 0:01:45, time: 0.898, data_time: 0.169, memory: 12465, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0095, loss_cls: 0.0531, acc: 97.8516, loss_bbox: 0.0858, loss_mask: 0.0874, loss: 0.2373
2023-02-09 21:08:58,956 - mmdet - INFO - Epoch [6][9/22]	lr: 3.542e-03, eta: 0:01:44, time: 0.892, data_time: 0.178, memory: 12465, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0100, loss_cls: 0.0371, acc: 98.6816, loss_bbox: 0.0651, loss_mask: 0.0836, loss: 0.1971
2023-02-09 21:08:59,818 - mmdet - INFO - Epoch [6][10/22]	lr: 3.572e-03, eta: 0:01:43, time: 0.861, data_time: 0.148, memory: 12465, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0038, loss_cls: 0.0374, acc: 98.3561, loss_bbox: 0.0656, loss_mask: 0.0800, loss: 0.1872
2023-02-09 21:09:00,746 - mmdet - INFO - Epoch [6][11/22]	lr: 3.602e-03, eta: 0:01:42, time: 0.929, data_time: 0.188, memory: 12465, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0075, loss_cls: 0.0469, acc: 98.2259, loss_bbox: 0.0907, loss_mask: 0.0833, loss: 0.2292
2023-02-09 21:09:01,661 - mmdet - INFO - Epoch [6][12/22]	lr: 3.632e-03, eta: 0:01:41, time: 0.914, data_time: 0.184, memory: 12465, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0064, loss_cls: 0.0469, acc: 98.0631, loss_bbox: 0.0769, loss_mask: 0.0774, loss: 0.2102
2023-02-09 21:09:02,542 - mmdet - INFO - Epoch [6][13/22]	lr: 3.662e-03, eta: 0:01:40, time: 0.881, data_time: 0.166, memory: 12465, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0094, loss_cls: 0.0351, acc: 98.7467, loss_bbox: 0.0697, loss_mask: 0.0826, loss: 0.1978
2023-02-09 21:09:03,484 - mmdet - INFO - Epoch [6][14/22]	lr: 3.692e-03, eta: 0:01:39, time: 0.942, data_time: 0.178, memory: 12609, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0065, loss_cls: 0.0640, acc: 97.1680, loss_bbox: 0.1092, loss_mask: 0.0938, loss: 0.2744
2023-02-09 21:09:04,368 - mmdet - INFO - Epoch [6][15/22]	lr: 3.722e-03, eta: 0:01:37, time: 0.883, data_time: 0.168, memory: 12609, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0068, loss_cls: 0.0410, acc: 98.5026, loss_bbox: 0.0593, loss_mask: 0.0918, loss: 0.2004
2023-02-09 21:09:05,290 - mmdet - INFO - Epoch [6][16/22]	lr: 3.752e-03, eta: 0:01:36, time: 0.922, data_time: 0.173, memory: 12609, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0055, loss_cls: 0.0512, acc: 97.9004, loss_bbox: 0.0754, loss_mask: 0.0804, loss: 0.2147
2023-02-09 21:09:06,178 - mmdet - INFO - Epoch [6][17/22]	lr: 3.782e-03, eta: 0:01:35, time: 0.888, data_time: 0.153, memory: 12609, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0071, loss_cls: 0.0474, acc: 98.1283, loss_bbox: 0.0763, loss_mask: 0.0868, loss: 0.2188
2023-02-09 21:09:07,084 - mmdet - INFO - Epoch [6][18/22]	lr: 3.812e-03, eta: 0:01:34, time: 0.906, data_time: 0.166, memory: 12609, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0081, loss_cls: 0.0568, acc: 97.6888, loss_bbox: 0.0993, loss_mask: 0.0984, loss: 0.2646
2023-02-09 21:09:07,948 - mmdet - INFO - Epoch [6][19/22]	lr: 3.842e-03, eta: 0:01:33, time: 0.864, data_time: 0.168, memory: 12609, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0062, loss_cls: 0.0312, acc: 98.8118, loss_bbox: 0.0449, loss_mask: 0.0649, loss: 0.1483
2023-02-09 21:09:08,824 - mmdet - INFO - Epoch [6][20/22]	lr: 3.872e-03, eta: 0:01:32, time: 0.876, data_time: 0.172, memory: 12609, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0096, loss_cls: 0.0412, acc: 98.3073, loss_bbox: 0.0754, loss_mask: 0.0800, loss: 0.2098
2023-02-09 21:09:09,700 - mmdet - INFO - Epoch [6][21/22]	lr: 3.902e-03, eta: 0:01:31, time: 0.876, data_time: 0.141, memory: 12609, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0086, loss_cls: 0.0450, acc: 98.2259, loss_bbox: 0.0841, loss_mask: 0.0939, loss: 0.2329
2023-02-09 21:09:10,597 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:09:10,597 - mmdet - INFO - Epoch [6][22/22]	lr: 3.932e-03, eta: 0:01:30, time: 0.897, data_time: 0.139, memory: 12609, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0087, loss_cls: 0.0452, acc: 98.1771, loss_bbox: 0.0845, loss_mask: 0.0902, loss: 0.2305
2023-02-09 21:09:13,474 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:09:13,542 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.764
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.927
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.665
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.815
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.815
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.815
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.714
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.819

2023-02-09 21:09:13,542 - mmdet - INFO - Evaluating segm...
2023-02-09 21:09:13,632 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.799
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.951
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.919
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.643
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.829
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.829
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.829
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.832

2023-02-09 21:09:13,633 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:09:13,634 - mmdet - INFO - Epoch(val) [6][56]	bbox_mAP: 0.7636, bbox_mAP_50: 0.9599, bbox_mAP_75: 0.9272, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.6651, bbox_mAP_l: 0.7674, bbox_mAP_copypaste: 0.7636 0.9599 0.9272 -1.0000 0.6651 0.7674, segm_mAP: 0.7985, segm_mAP_50: 0.9507, segm_mAP_75: 0.9193, segm_mAP_s: -1.0000, segm_mAP_m: 0.6433, segm_mAP_l: 0.8059, segm_mAP_copypaste: 0.7985 0.9507 0.9193 -1.0000 0.6433 0.8059
2023-02-09 21:09:17,587 - mmdet - INFO - Epoch [7][1/22]	lr: 3.962e-03, eta: 0:01:30, time: 3.841, data_time: 3.091, memory: 12609, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0070, loss_cls: 0.0450, acc: 98.1934, loss_bbox: 0.0755, loss_mask: 0.0786, loss: 0.2073
2023-02-09 21:09:18,410 - mmdet - INFO - Epoch [7][2/22]	lr: 3.992e-03, eta: 0:01:29, time: 0.823, data_time: 0.110, memory: 12609, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0064, loss_cls: 0.0481, acc: 98.1934, loss_bbox: 0.0616, loss_mask: 0.0779, loss: 0.1947
2023-02-09 21:09:19,376 - mmdet - INFO - Epoch [7][3/22]	lr: 4.022e-03, eta: 0:01:28, time: 0.966, data_time: 0.242, memory: 12609, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0049, loss_cls: 0.0413, acc: 98.5514, loss_bbox: 0.0821, loss_mask: 0.0950, loss: 0.2247
2023-02-09 21:09:20,211 - mmdet - INFO - Epoch [7][4/22]	lr: 4.052e-03, eta: 0:01:27, time: 0.835, data_time: 0.110, memory: 12609, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0081, loss_cls: 0.0451, acc: 98.3398, loss_bbox: 0.0936, loss_mask: 0.1078, loss: 0.2557
2023-02-09 21:09:21,202 - mmdet - INFO - Epoch [7][5/22]	lr: 4.082e-03, eta: 0:01:26, time: 0.990, data_time: 0.250, memory: 12609, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0079, loss_cls: 0.0394, acc: 98.5840, loss_bbox: 0.0729, loss_mask: 0.0802, loss: 0.2016
2023-02-09 21:09:22,065 - mmdet - INFO - Epoch [7][6/22]	lr: 4.112e-03, eta: 0:01:25, time: 0.864, data_time: 0.111, memory: 12609, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0108, loss_cls: 0.0486, acc: 97.9980, loss_bbox: 0.0838, loss_mask: 0.0916, loss: 0.2364
2023-02-09 21:09:23,037 - mmdet - INFO - Epoch [7][7/22]	lr: 4.142e-03, eta: 0:01:24, time: 0.971, data_time: 0.236, memory: 12609, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0072, loss_cls: 0.0386, acc: 98.6003, loss_bbox: 0.0744, loss_mask: 0.0821, loss: 0.2039
2023-02-09 21:09:23,875 - mmdet - INFO - Epoch [7][8/22]	lr: 4.172e-03, eta: 0:01:22, time: 0.839, data_time: 0.111, memory: 12609, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0055, loss_cls: 0.0452, acc: 98.2747, loss_bbox: 0.0678, loss_mask: 0.0728, loss: 0.1940
2023-02-09 21:09:24,833 - mmdet - INFO - Epoch [7][9/22]	lr: 4.202e-03, eta: 0:01:21, time: 0.958, data_time: 0.232, memory: 12609, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0055, loss_cls: 0.0416, acc: 98.2585, loss_bbox: 0.0797, loss_mask: 0.0710, loss: 0.1994
2023-02-09 21:09:25,680 - mmdet - INFO - Epoch [7][10/22]	lr: 4.232e-03, eta: 0:01:20, time: 0.848, data_time: 0.110, memory: 12609, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0083, loss_cls: 0.0452, acc: 98.2096, loss_bbox: 0.0795, loss_mask: 0.0873, loss: 0.2216
2023-02-09 21:09:26,702 - mmdet - INFO - Epoch [7][11/22]	lr: 4.262e-03, eta: 0:01:19, time: 1.021, data_time: 0.248, memory: 12609, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0100, loss_cls: 0.0516, acc: 97.7539, loss_bbox: 0.0795, loss_mask: 0.0920, loss: 0.2346
2023-02-09 21:09:27,574 - mmdet - INFO - Epoch [7][12/22]	lr: 4.292e-03, eta: 0:01:18, time: 0.873, data_time: 0.116, memory: 12609, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0105, loss_cls: 0.0551, acc: 97.7051, loss_bbox: 0.0968, loss_mask: 0.0922, loss: 0.2556
2023-02-09 21:09:28,531 - mmdet - INFO - Epoch [7][13/22]	lr: 4.322e-03, eta: 0:01:17, time: 0.957, data_time: 0.237, memory: 12609, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0054, loss_cls: 0.0344, acc: 98.5840, loss_bbox: 0.0660, loss_mask: 0.0677, loss: 0.1741
2023-02-09 21:09:29,375 - mmdet - INFO - Epoch [7][14/22]	lr: 4.352e-03, eta: 0:01:16, time: 0.843, data_time: 0.114, memory: 12609, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0076, loss_cls: 0.0429, acc: 98.3073, loss_bbox: 0.0710, loss_mask: 0.0732, loss: 0.1961
2023-02-09 21:09:30,335 - mmdet - INFO - Epoch [7][15/22]	lr: 4.382e-03, eta: 0:01:15, time: 0.958, data_time: 0.244, memory: 12609, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0052, loss_cls: 0.0341, acc: 98.6816, loss_bbox: 0.0601, loss_mask: 0.0777, loss: 0.1780
2023-02-09 21:09:31,188 - mmdet - INFO - Epoch [7][16/22]	lr: 4.412e-03, eta: 0:01:14, time: 0.856, data_time: 0.113, memory: 12609, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0067, loss_cls: 0.0433, acc: 98.1120, loss_bbox: 0.0732, loss_mask: 0.0716, loss: 0.1957
2023-02-09 21:09:32,153 - mmdet - INFO - Epoch [7][17/22]	lr: 4.442e-03, eta: 0:01:13, time: 0.965, data_time: 0.221, memory: 12609, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0057, loss_cls: 0.0515, acc: 98.0794, loss_bbox: 0.0785, loss_mask: 0.0780, loss: 0.2159
2023-02-09 21:09:33,033 - mmdet - INFO - Epoch [7][18/22]	lr: 4.472e-03, eta: 0:01:12, time: 0.880, data_time: 0.110, memory: 12609, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0078, loss_cls: 0.0479, acc: 98.3073, loss_bbox: 0.1052, loss_mask: 0.0901, loss: 0.2533
2023-02-09 21:09:33,975 - mmdet - INFO - Epoch [7][19/22]	lr: 4.502e-03, eta: 0:01:10, time: 0.942, data_time: 0.222, memory: 12609, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0057, loss_cls: 0.0535, acc: 97.7051, loss_bbox: 0.0850, loss_mask: 0.0923, loss: 0.2378
2023-02-09 21:09:34,832 - mmdet - INFO - Epoch [7][20/22]	lr: 4.531e-03, eta: 0:01:09, time: 0.858, data_time: 0.113, memory: 12609, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0127, loss_cls: 0.0475, acc: 98.0143, loss_bbox: 0.0868, loss_mask: 0.0841, loss: 0.2324
2023-02-09 21:09:35,707 - mmdet - INFO - Epoch [7][21/22]	lr: 4.561e-03, eta: 0:01:08, time: 0.875, data_time: 0.154, memory: 12609, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0046, loss_cls: 0.0485, acc: 97.9818, loss_bbox: 0.0625, loss_mask: 0.0758, loss: 0.1936
2023-02-09 21:09:36,528 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:09:36,528 - mmdet - INFO - Epoch [7][22/22]	lr: 4.591e-03, eta: 0:01:07, time: 0.821, data_time: 0.114, memory: 12609, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0059, loss_cls: 0.0367, acc: 98.6979, loss_bbox: 0.0663, loss_mask: 0.0674, loss: 0.1773
2023-02-09 21:09:39,434 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:09:39,500 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.769
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.959
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.927
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.647
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.776
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.820
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.820
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.820
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.825

2023-02-09 21:09:39,501 - mmdet - INFO - Evaluating segm...
2023-02-09 21:09:39,576 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.808
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.959
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.919
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.648
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.817
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.840
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.840
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.840
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.844

2023-02-09 21:09:39,577 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:09:39,578 - mmdet - INFO - Epoch(val) [7][56]	bbox_mAP: 0.7687, bbox_mAP_50: 0.9593, bbox_mAP_75: 0.9275, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.6470, bbox_mAP_l: 0.7757, bbox_mAP_copypaste: 0.7687 0.9593 0.9275 -1.0000 0.6470 0.7757, segm_mAP: 0.8078, segm_mAP_50: 0.9593, segm_mAP_75: 0.9188, segm_mAP_s: -1.0000, segm_mAP_m: 0.6484, segm_mAP_l: 0.8173, segm_mAP_copypaste: 0.8078 0.9593 0.9188 -1.0000 0.6484 0.8173
2023-02-09 21:09:43,516 - mmdet - INFO - Epoch [8][1/22]	lr: 4.621e-04, eta: 0:01:07, time: 3.820, data_time: 3.050, memory: 12609, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0083, loss_cls: 0.0567, acc: 97.7376, loss_bbox: 0.1003, loss_mask: 0.0997, loss: 0.2655
2023-02-09 21:09:44,443 - mmdet - INFO - Epoch [8][2/22]	lr: 4.651e-04, eta: 0:01:06, time: 0.928, data_time: 0.182, memory: 12609, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0065, loss_cls: 0.0431, acc: 98.2259, loss_bbox: 0.0762, loss_mask: 0.0787, loss: 0.2068
2023-02-09 21:09:45,354 - mmdet - INFO - Epoch [8][3/22]	lr: 4.681e-04, eta: 0:01:05, time: 0.911, data_time: 0.185, memory: 12609, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0065, loss_cls: 0.0471, acc: 98.0957, loss_bbox: 0.0663, loss_mask: 0.0756, loss: 0.1964
2023-02-09 21:09:46,265 - mmdet - INFO - Epoch [8][4/22]	lr: 4.711e-04, eta: 0:01:04, time: 0.911, data_time: 0.173, memory: 12609, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0047, loss_cls: 0.0396, acc: 98.3398, loss_bbox: 0.0658, loss_mask: 0.0689, loss: 0.1797
2023-02-09 21:09:47,153 - mmdet - INFO - Epoch [8][5/22]	lr: 4.741e-04, eta: 0:01:03, time: 0.888, data_time: 0.161, memory: 12609, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0093, loss_cls: 0.0570, acc: 97.7702, loss_bbox: 0.0842, loss_mask: 0.0979, loss: 0.2492
2023-02-09 21:09:48,064 - mmdet - INFO - Epoch [8][6/22]	lr: 4.771e-04, eta: 0:01:02, time: 0.911, data_time: 0.191, memory: 12609, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0058, loss_cls: 0.0406, acc: 98.4863, loss_bbox: 0.0654, loss_mask: 0.0644, loss: 0.1784
2023-02-09 21:09:48,944 - mmdet - INFO - Epoch [8][7/22]	lr: 4.801e-04, eta: 0:01:01, time: 0.880, data_time: 0.157, memory: 12609, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0061, loss_cls: 0.0379, acc: 98.5677, loss_bbox: 0.0638, loss_mask: 0.0981, loss: 0.2078
2023-02-09 21:09:49,866 - mmdet - INFO - Epoch [8][8/22]	lr: 4.831e-04, eta: 0:01:00, time: 0.922, data_time: 0.165, memory: 12609, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0072, loss_cls: 0.0477, acc: 97.8841, loss_bbox: 0.0834, loss_mask: 0.0872, loss: 0.2265
2023-02-09 21:09:50,720 - mmdet - INFO - Epoch [8][9/22]	lr: 4.861e-04, eta: 0:00:59, time: 0.854, data_time: 0.160, memory: 12609, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0061, loss_cls: 0.0301, acc: 98.7793, loss_bbox: 0.0495, loss_mask: 0.0836, loss: 0.1699
2023-02-09 21:09:51,578 - mmdet - INFO - Epoch [8][10/22]	lr: 4.891e-04, eta: 0:00:57, time: 0.858, data_time: 0.153, memory: 12609, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0069, loss_cls: 0.0391, acc: 98.4049, loss_bbox: 0.0540, loss_mask: 0.0745, loss: 0.1751
2023-02-09 21:09:52,459 - mmdet - INFO - Epoch [8][11/22]	lr: 4.921e-04, eta: 0:00:56, time: 0.881, data_time: 0.158, memory: 12609, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0069, loss_cls: 0.0331, acc: 98.7467, loss_bbox: 0.0668, loss_mask: 0.0816, loss: 0.1893
2023-02-09 21:09:53,314 - mmdet - INFO - Epoch [8][12/22]	lr: 4.951e-04, eta: 0:00:55, time: 0.855, data_time: 0.156, memory: 12609, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0049, loss_cls: 0.0267, acc: 99.0234, loss_bbox: 0.0517, loss_mask: 0.0717, loss: 0.1563
2023-02-09 21:09:54,205 - mmdet - INFO - Epoch [8][13/22]	lr: 4.981e-04, eta: 0:00:54, time: 0.891, data_time: 0.153, memory: 12609, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0064, loss_cls: 0.0427, acc: 98.2910, loss_bbox: 0.0802, loss_mask: 0.0760, loss: 0.2077
2023-02-09 21:09:55,123 - mmdet - INFO - Epoch [8][14/22]	lr: 5.011e-04, eta: 0:00:53, time: 0.918, data_time: 0.181, memory: 12609, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0077, loss_cls: 0.0415, acc: 98.5189, loss_bbox: 0.0788, loss_mask: 0.0814, loss: 0.2111
2023-02-09 21:09:55,978 - mmdet - INFO - Epoch [8][15/22]	lr: 5.041e-04, eta: 0:00:52, time: 0.855, data_time: 0.150, memory: 12609, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0047, loss_cls: 0.0315, acc: 98.8932, loss_bbox: 0.0632, loss_mask: 0.0772, loss: 0.1777
2023-02-09 21:09:56,902 - mmdet - INFO - Epoch [8][16/22]	lr: 5.071e-04, eta: 0:00:51, time: 0.924, data_time: 0.176, memory: 12609, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0059, loss_cls: 0.0512, acc: 98.0306, loss_bbox: 0.0934, loss_mask: 0.0789, loss: 0.2300
2023-02-09 21:09:57,792 - mmdet - INFO - Epoch [8][17/22]	lr: 5.101e-04, eta: 0:00:50, time: 0.890, data_time: 0.157, memory: 12609, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0075, loss_cls: 0.0480, acc: 97.9980, loss_bbox: 0.0692, loss_mask: 0.0879, loss: 0.2148
2023-02-09 21:09:58,709 - mmdet - INFO - Epoch [8][18/22]	lr: 5.131e-04, eta: 0:00:49, time: 0.917, data_time: 0.181, memory: 12609, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0085, loss_cls: 0.0441, acc: 98.3236, loss_bbox: 0.0762, loss_mask: 0.0883, loss: 0.2198
2023-02-09 21:09:59,613 - mmdet - INFO - Epoch [8][19/22]	lr: 5.161e-04, eta: 0:00:48, time: 0.904, data_time: 0.177, memory: 12609, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0067, loss_cls: 0.0433, acc: 98.3887, loss_bbox: 0.0648, loss_mask: 0.0782, loss: 0.1938
2023-02-09 21:10:00,555 - mmdet - INFO - Epoch [8][20/22]	lr: 5.191e-04, eta: 0:00:47, time: 0.942, data_time: 0.181, memory: 12714, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0088, loss_cls: 0.0496, acc: 97.9167, loss_bbox: 0.0868, loss_mask: 0.0720, loss: 0.2193
2023-02-09 21:10:01,460 - mmdet - INFO - Epoch [8][21/22]	lr: 5.221e-04, eta: 0:00:46, time: 0.906, data_time: 0.144, memory: 12714, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0050, loss_cls: 0.0447, acc: 98.1608, loss_bbox: 0.0804, loss_mask: 0.0914, loss: 0.2224
2023-02-09 21:10:02,336 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:10:02,336 - mmdet - INFO - Epoch [8][22/22]	lr: 5.251e-04, eta: 0:00:45, time: 0.876, data_time: 0.141, memory: 12714, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0061, loss_cls: 0.0441, acc: 98.2259, loss_bbox: 0.0700, loss_mask: 0.0808, loss: 0.2023
2023-02-09 21:10:05,233 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:10:05,295 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.770
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.928
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.682
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.775
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.729
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.825

2023-02-09 21:10:05,296 - mmdet - INFO - Evaluating segm...
2023-02-09 21:10:05,365 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.810
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.929
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.652
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.817
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.757
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.845

2023-02-09 21:10:05,366 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:10:05,366 - mmdet - INFO - Epoch(val) [8][56]	bbox_mAP: 0.7696, bbox_mAP_50: 0.9596, bbox_mAP_75: 0.9276, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.6817, bbox_mAP_l: 0.7746, bbox_mAP_copypaste: 0.7696 0.9596 0.9276 -1.0000 0.6817 0.7746, segm_mAP: 0.8098, segm_mAP_50: 0.9596, segm_mAP_75: 0.9286, segm_mAP_s: -1.0000, segm_mAP_m: 0.6518, segm_mAP_l: 0.8170, segm_mAP_copypaste: 0.8098 0.9596 0.9286 -1.0000 0.6518 0.8170
2023-02-09 21:10:09,272 - mmdet - INFO - Epoch [9][1/22]	lr: 5.281e-04, eta: 0:00:44, time: 3.790, data_time: 3.046, memory: 12714, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0050, loss_cls: 0.0445, acc: 98.2910, loss_bbox: 0.0540, loss_mask: 0.0639, loss: 0.1682
2023-02-09 21:10:10,159 - mmdet - INFO - Epoch [9][2/22]	lr: 5.311e-04, eta: 0:00:43, time: 0.887, data_time: 0.168, memory: 12714, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0041, loss_cls: 0.0347, acc: 98.5677, loss_bbox: 0.0612, loss_mask: 0.0731, loss: 0.1734
2023-02-09 21:10:11,035 - mmdet - INFO - Epoch [9][3/22]	lr: 5.341e-04, eta: 0:00:42, time: 0.876, data_time: 0.165, memory: 12714, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0035, loss_cls: 0.0296, acc: 98.9095, loss_bbox: 0.0509, loss_mask: 0.0756, loss: 0.1601
2023-02-09 21:10:11,940 - mmdet - INFO - Epoch [9][4/22]	lr: 5.371e-04, eta: 0:00:41, time: 0.909, data_time: 0.164, memory: 12714, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0082, loss_cls: 0.0464, acc: 98.2747, loss_bbox: 0.0944, loss_mask: 0.0858, loss: 0.2369
2023-02-09 21:10:12,826 - mmdet - INFO - Epoch [9][5/22]	lr: 5.401e-04, eta: 0:00:40, time: 0.885, data_time: 0.155, memory: 12714, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0086, loss_cls: 0.0484, acc: 98.0631, loss_bbox: 0.0725, loss_mask: 0.0782, loss: 0.2102
2023-02-09 21:10:13,707 - mmdet - INFO - Epoch [9][6/22]	lr: 5.431e-04, eta: 0:00:39, time: 0.878, data_time: 0.152, memory: 12714, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0038, loss_cls: 0.0364, acc: 98.5026, loss_bbox: 0.0678, loss_mask: 0.0753, loss: 0.1837
2023-02-09 21:10:14,597 - mmdet - INFO - Epoch [9][7/22]	lr: 5.461e-04, eta: 0:00:38, time: 0.890, data_time: 0.168, memory: 12714, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0083, loss_cls: 0.0552, acc: 97.7376, loss_bbox: 0.0840, loss_mask: 0.1001, loss: 0.2507
2023-02-09 21:10:15,502 - mmdet - INFO - Epoch [9][8/22]	lr: 5.491e-04, eta: 0:00:37, time: 0.904, data_time: 0.180, memory: 12714, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0078, loss_cls: 0.0417, acc: 98.3724, loss_bbox: 0.0740, loss_mask: 0.0906, loss: 0.2147
2023-02-09 21:10:16,378 - mmdet - INFO - Epoch [9][9/22]	lr: 5.520e-04, eta: 0:00:36, time: 0.876, data_time: 0.145, memory: 12714, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0047, loss_cls: 0.0367, acc: 98.4538, loss_bbox: 0.0600, loss_mask: 0.0634, loss: 0.1655
2023-02-09 21:10:17,298 - mmdet - INFO - Epoch [9][10/22]	lr: 5.550e-04, eta: 0:00:35, time: 0.920, data_time: 0.160, memory: 12714, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0121, loss_cls: 0.0558, acc: 97.7702, loss_bbox: 0.0883, loss_mask: 0.0862, loss: 0.2441
2023-02-09 21:10:18,170 - mmdet - INFO - Epoch [9][11/22]	lr: 5.580e-04, eta: 0:00:34, time: 0.872, data_time: 0.163, memory: 12714, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0029, loss_cls: 0.0389, acc: 98.6491, loss_bbox: 0.0481, loss_mask: 0.0723, loss: 0.1628
2023-02-09 21:10:19,030 - mmdet - INFO - Epoch [9][12/22]	lr: 5.610e-04, eta: 0:00:33, time: 0.860, data_time: 0.149, memory: 12714, loss_rpn_cls: 0.0005, loss_rpn_bbox: 0.0043, loss_cls: 0.0295, acc: 98.8607, loss_bbox: 0.0521, loss_mask: 0.0687, loss: 0.1550
2023-02-09 21:10:19,951 - mmdet - INFO - Epoch [9][13/22]	lr: 5.640e-04, eta: 0:00:31, time: 0.922, data_time: 0.177, memory: 12714, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0119, loss_cls: 0.0632, acc: 97.5098, loss_bbox: 0.1007, loss_mask: 0.0931, loss: 0.2714
2023-02-09 21:10:20,842 - mmdet - INFO - Epoch [9][14/22]	lr: 5.670e-04, eta: 0:00:30, time: 0.891, data_time: 0.171, memory: 12714, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0071, loss_cls: 0.0390, acc: 98.2910, loss_bbox: 0.0723, loss_mask: 0.0919, loss: 0.2114
2023-02-09 21:10:21,727 - mmdet - INFO - Epoch [9][15/22]	lr: 5.700e-04, eta: 0:00:29, time: 0.885, data_time: 0.168, memory: 12714, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0069, loss_cls: 0.0398, acc: 98.3073, loss_bbox: 0.0654, loss_mask: 0.0890, loss: 0.2020
2023-02-09 21:10:22,572 - mmdet - INFO - Epoch [9][16/22]	lr: 5.730e-04, eta: 0:00:28, time: 0.844, data_time: 0.147, memory: 12714, loss_rpn_cls: 0.0005, loss_rpn_bbox: 0.0048, loss_cls: 0.0357, acc: 98.5677, loss_bbox: 0.0501, loss_mask: 0.0790, loss: 0.1701
2023-02-09 21:10:23,468 - mmdet - INFO - Epoch [9][17/22]	lr: 5.760e-04, eta: 0:00:27, time: 0.896, data_time: 0.155, memory: 12714, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0076, loss_cls: 0.0441, acc: 98.1445, loss_bbox: 0.0771, loss_mask: 0.0760, loss: 0.2062
2023-02-09 21:10:24,386 - mmdet - INFO - Epoch [9][18/22]	lr: 5.790e-04, eta: 0:00:26, time: 0.918, data_time: 0.171, memory: 12714, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0054, loss_cls: 0.0427, acc: 98.4375, loss_bbox: 0.0688, loss_mask: 0.0810, loss: 0.1985
2023-02-09 21:10:25,279 - mmdet - INFO - Epoch [9][19/22]	lr: 5.820e-04, eta: 0:00:25, time: 0.893, data_time: 0.165, memory: 12714, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0047, loss_cls: 0.0433, acc: 98.3073, loss_bbox: 0.0634, loss_mask: 0.0787, loss: 0.1920
2023-02-09 21:10:26,165 - mmdet - INFO - Epoch [9][20/22]	lr: 5.850e-04, eta: 0:00:24, time: 0.886, data_time: 0.144, memory: 12714, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0075, loss_cls: 0.0426, acc: 98.3724, loss_bbox: 0.0810, loss_mask: 0.0751, loss: 0.2089
2023-02-09 21:10:27,096 - mmdet - INFO - Epoch [9][21/22]	lr: 5.880e-04, eta: 0:00:23, time: 0.931, data_time: 0.166, memory: 12714, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0093, loss_cls: 0.0479, acc: 97.9980, loss_bbox: 0.0998, loss_mask: 0.0976, loss: 0.2563
2023-02-09 21:10:27,973 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:10:27,973 - mmdet - INFO - Epoch [9][22/22]	lr: 5.910e-04, eta: 0:00:22, time: 0.877, data_time: 0.147, memory: 12714, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0066, loss_cls: 0.0406, acc: 98.3073, loss_bbox: 0.0749, loss_mask: 0.0822, loss: 0.2054
2023-02-09 21:10:30,884 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:10:30,962 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.773
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.928
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.662
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.779
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.824
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.824
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.824
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.729
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.829

2023-02-09 21:10:30,962 - mmdet - INFO - Evaluating segm...
2023-02-09 21:10:31,040 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.809
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.929
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.640
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.817
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.757
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.845

2023-02-09 21:10:31,041 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:10:31,041 - mmdet - INFO - Epoch(val) [9][56]	bbox_mAP: 0.7725, bbox_mAP_50: 0.9597, bbox_mAP_75: 0.9279, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.6619, bbox_mAP_l: 0.7787, bbox_mAP_copypaste: 0.7725 0.9597 0.9279 -1.0000 0.6619 0.7787, segm_mAP: 0.8090, segm_mAP_50: 0.9597, segm_mAP_75: 0.9287, segm_mAP_s: -1.0000, segm_mAP_m: 0.6400, segm_mAP_l: 0.8168, segm_mAP_copypaste: 0.8090 0.9597 0.9287 -1.0000 0.6400 0.8168
2023-02-09 21:10:35,001 - mmdet - INFO - Epoch [10][1/22]	lr: 5.940e-04, eta: 0:00:21, time: 3.848, data_time: 3.091, memory: 12714, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0088, loss_cls: 0.0504, acc: 97.8190, loss_bbox: 0.0867, loss_mask: 0.0968, loss: 0.2437
2023-02-09 21:10:35,848 - mmdet - INFO - Epoch [10][2/22]	lr: 5.970e-04, eta: 0:00:20, time: 0.847, data_time: 0.119, memory: 12714, loss_rpn_cls: 0.0005, loss_rpn_bbox: 0.0059, loss_cls: 0.0415, acc: 98.1934, loss_bbox: 0.0586, loss_mask: 0.0834, loss: 0.1899
2023-02-09 21:10:36,790 - mmdet - INFO - Epoch [10][3/22]	lr: 6.000e-04, eta: 0:00:19, time: 0.942, data_time: 0.233, memory: 12714, loss_rpn_cls: 0.0005, loss_rpn_bbox: 0.0053, loss_cls: 0.0370, acc: 98.4212, loss_bbox: 0.0618, loss_mask: 0.0774, loss: 0.1819
2023-02-09 21:10:37,633 - mmdet - INFO - Epoch [10][4/22]	lr: 6.000e-04, eta: 0:00:18, time: 0.844, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0071, loss_cls: 0.0490, acc: 97.9980, loss_bbox: 0.0763, loss_mask: 0.0823, loss: 0.2159
2023-02-09 21:10:38,619 - mmdet - INFO - Epoch [10][5/22]	lr: 6.000e-04, eta: 0:00:17, time: 0.986, data_time: 0.229, memory: 12714, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0071, loss_cls: 0.0500, acc: 98.0143, loss_bbox: 0.0719, loss_mask: 0.0798, loss: 0.2104
2023-02-09 21:10:39,476 - mmdet - INFO - Epoch [10][6/22]	lr: 6.000e-04, eta: 0:00:16, time: 0.857, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0060, loss_cls: 0.0352, acc: 98.6003, loss_bbox: 0.0667, loss_mask: 0.0836, loss: 0.1935
2023-02-09 21:10:40,423 - mmdet - INFO - Epoch [10][7/22]	lr: 6.000e-04, eta: 0:00:15, time: 0.948, data_time: 0.236, memory: 12714, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0079, loss_cls: 0.0510, acc: 97.8516, loss_bbox: 0.0733, loss_mask: 0.1062, loss: 0.2392
2023-02-09 21:10:41,285 - mmdet - INFO - Epoch [10][8/22]	lr: 6.000e-04, eta: 0:00:14, time: 0.862, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0052, loss_cls: 0.0508, acc: 97.7539, loss_bbox: 0.0695, loss_mask: 0.0653, loss: 0.1932
2023-02-09 21:10:42,226 - mmdet - INFO - Epoch [10][9/22]	lr: 6.000e-04, eta: 0:00:13, time: 0.941, data_time: 0.238, memory: 12714, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0029, loss_cls: 0.0285, acc: 98.8281, loss_bbox: 0.0456, loss_mask: 0.0786, loss: 0.1583
2023-02-09 21:10:43,091 - mmdet - INFO - Epoch [10][10/22]	lr: 6.000e-04, eta: 0:00:12, time: 0.865, data_time: 0.115, memory: 12714, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0055, loss_cls: 0.0431, acc: 98.4375, loss_bbox: 0.0729, loss_mask: 0.0713, loss: 0.1938
2023-02-09 21:10:44,074 - mmdet - INFO - Epoch [10][11/22]	lr: 6.000e-04, eta: 0:00:11, time: 0.983, data_time: 0.238, memory: 12714, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0047, loss_cls: 0.0409, acc: 98.3724, loss_bbox: 0.0663, loss_mask: 0.0753, loss: 0.1897
2023-02-09 21:10:44,936 - mmdet - INFO - Epoch [10][12/22]	lr: 6.000e-04, eta: 0:00:10, time: 0.862, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0067, loss_cls: 0.0454, acc: 98.4049, loss_bbox: 0.0869, loss_mask: 0.0905, loss: 0.2308
2023-02-09 21:10:45,853 - mmdet - INFO - Epoch [10][13/22]	lr: 6.000e-04, eta: 0:00:09, time: 0.917, data_time: 0.196, memory: 12714, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0056, loss_cls: 0.0375, acc: 98.5840, loss_bbox: 0.0608, loss_mask: 0.0756, loss: 0.1809
2023-02-09 21:10:46,717 - mmdet - INFO - Epoch [10][14/22]	lr: 6.000e-04, eta: 0:00:08, time: 0.864, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0085, loss_cls: 0.0493, acc: 98.1771, loss_bbox: 0.0893, loss_mask: 0.0762, loss: 0.2248
2023-02-09 21:10:47,626 - mmdet - INFO - Epoch [10][15/22]	lr: 6.000e-04, eta: 0:00:07, time: 0.910, data_time: 0.196, memory: 12714, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0059, loss_cls: 0.0289, acc: 98.7793, loss_bbox: 0.0526, loss_mask: 0.0818, loss: 0.1700
2023-02-09 21:10:48,457 - mmdet - INFO - Epoch [10][16/22]	lr: 6.000e-04, eta: 0:00:06, time: 0.831, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0085, loss_cls: 0.0452, acc: 98.1934, loss_bbox: 0.0694, loss_mask: 0.0925, loss: 0.2162
2023-02-09 21:10:49,398 - mmdet - INFO - Epoch [10][17/22]	lr: 6.000e-04, eta: 0:00:05, time: 0.940, data_time: 0.220, memory: 12714, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0075, loss_cls: 0.0425, acc: 98.2747, loss_bbox: 0.0678, loss_mask: 0.0735, loss: 0.1922
2023-02-09 21:10:50,268 - mmdet - INFO - Epoch [10][18/22]	lr: 6.000e-04, eta: 0:00:04, time: 0.870, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0090, loss_cls: 0.0475, acc: 98.0469, loss_bbox: 0.0838, loss_mask: 0.0748, loss: 0.2179
2023-02-09 21:10:51,169 - mmdet - INFO - Epoch [10][19/22]	lr: 6.000e-04, eta: 0:00:03, time: 0.901, data_time: 0.204, memory: 12714, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0046, loss_cls: 0.0331, acc: 98.6979, loss_bbox: 0.0434, loss_mask: 0.0754, loss: 0.1578
2023-02-09 21:10:52,011 - mmdet - INFO - Epoch [10][20/22]	lr: 6.000e-04, eta: 0:00:02, time: 0.843, data_time: 0.110, memory: 12714, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0074, loss_cls: 0.0488, acc: 97.8516, loss_bbox: 0.0849, loss_mask: 0.0832, loss: 0.2254
2023-02-09 21:10:52,912 - mmdet - INFO - Epoch [10][21/22]	lr: 6.000e-04, eta: 0:00:01, time: 0.901, data_time: 0.161, memory: 12714, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0079, loss_cls: 0.0373, acc: 98.4212, loss_bbox: 0.0662, loss_mask: 0.0837, loss: 0.1964
2023-02-09 21:10:53,752 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:10:53,752 - mmdet - INFO - Epoch [10][22/22]	lr: 6.000e-04, eta: 0:00:00, time: 0.840, data_time: 0.111, memory: 12714, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0058, loss_cls: 0.0480, acc: 98.1771, loss_bbox: 0.0956, loss_mask: 0.0884, loss: 0.2388
2023-02-09 21:10:53,908 - mmdet - INFO - Saving checkpoint at 10 epochs
2023-02-09 21:10:57,649 - mmdet - INFO - Evaluating bbox...
2023-02-09 21:10:57,710 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.773
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.928
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.645
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.823
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.823
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.823
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.729
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.827

2023-02-09 21:10:57,710 - mmdet - INFO - Evaluating segm...
2023-02-09 21:10:57,794 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.811
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.929
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.636
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.818
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.841
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.846

2023-02-09 21:10:57,795 - mmdet - INFO - Exp name: chicken.py
2023-02-09 21:10:57,795 - mmdet - INFO - Epoch(val) [10][56]	bbox_mAP: 0.7731, bbox_mAP_50: 0.9599, bbox_mAP_75: 0.9281, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.6453, bbox_mAP_l: 0.7777, bbox_mAP_copypaste: 0.7731 0.9599 0.9281 -1.0000 0.6453 0.7777, segm_mAP: 0.8112, segm_mAP_50: 0.9599, segm_mAP_75: 0.9287, segm_mAP_s: -1.0000, segm_mAP_m: 0.6360, segm_mAP_l: 0.8184, segm_mAP_copypaste: 0.8112 0.9599 0.9287 -1.0000 0.6360 0.8184
